import { pool } from './database.js'
import { fileURLToPath } from 'url'

async function addVisibilityColumns() {
  try {
    // Ajouter la colonne visible_to_all si elle n'existe pas
    await pool.query(`
      ALTER TABLE slots
      ADD COLUMN IF NOT EXISTS visible_to_all BOOLEAN DEFAULT TRUE;
    `)
    console.log('‚úÖ Colonne visible_to_all ajout√©e √† la table slots.')
    
    // Ajouter la colonne visible_to_friends si elle n'existe pas
    await pool.query(`
      ALTER TABLE slots
      ADD COLUMN IF NOT EXISTS visible_to_friends BOOLEAN DEFAULT FALSE;
    `)
    console.log('‚úÖ Colonne visible_to_friends ajout√©e √† la table slots.')
    
    // Ajouter la colonne lieu si elle n'existe pas
    await pool.query(`
      ALTER TABLE slots
      ADD COLUMN IF NOT EXISTS lieu VARCHAR(255) DEFAULT '';
    `)
    console.log('‚úÖ Colonne lieu ajout√©e √† la table slots.')
    
    // Ajouter la colonne max_participants si elle n'existe pas
    await pool.query(`
      ALTER TABLE slots
      ADD COLUMN IF NOT EXISTS max_participants INTEGER;
    `)
    console.log('‚úÖ Colonne max_participants ajout√©e √† la table slots.')
    
    console.log('üéâ Migration des colonnes de visibilit√© termin√©e avec succ√®s !')
    
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'ajout des colonnes de visibilit√©:', error)
    throw error
  }
}

async function main() {
  try {
    await addVisibilityColumns()
    console.log('Migration termin√©e.')
  } catch (error) {
    console.error('‚ùå Erreur lors de la migration:', error)
  } finally {
    // Fermer le pool de connexions
    await pool.end()
  }
}

// Ex√©cuter la migration si le script est appel√© directement
if (process.argv[1] === fileURLToPath(import.meta.url)) {
  main()
}

export { addVisibilityColumns }
